{"version":3,"sources":["components/Store/Store.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","types/TodosType.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["reducer","state","action","type","selectedTodo","todo","initialState","StateContext","React","createContext","DispatchContext","GlobalStateProvider","_ref","children","dispatch","useReducer","_jsx","Provider","value","TodoItem","useContext","_jsxs","className","cn","id","completed","title","onClick","TodoList","todos","map","TodosType","TodoFilter","setType","setAppliedQuery","query","setQuery","useState","applyQuery","useRef","debounce","current","onChange","e","target","all","active","placeholder","style","pointerEvents","handleInputClear","Loader","get","url","fullURL","delay","Promise","resolve","setTimeout","then","fetch","res","json","getAllTodos","TodoModal","loading","setLoading","user","setUser","useEffect","userId","concat","finally","handleSelectedDelete","href","email","name","App","allTodos","setAllTodos","visibleTodos","setVisibleTodos","todosType","setTodosType","filter","filteredPosts","useMemo","includes","_Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0153708.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface State {\n  selectedTodo: Todo | null,\n}\n\ntype Action = {\n  type: 'selectNew', todo: Todo,\n} | {\n  type: 'cancelSelection',\n};\n\nfunction reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'selectNew':\n      return { selectedTodo: action.todo };\n\n    case 'cancelSelection':\n      return { selectedTodo: null };\n\n    default: return state;\n  }\n}\n\nconst initialState: State = {\n  selectedTodo: null,\n};\n\nexport const StateContext = React.createContext(initialState);\nexport const DispatchContext = React.createContext<React.Dispatch<Action>>(\n  () => { },\n);\n\ninterface Props {\n  children: React.ReactNode,\n}\n\nexport const GlobalStateProvider: React.FC<Props> = ({ children }) => {\n  // const storedTodo = localStorage.getItem('selectedTodo');\n  // const initialTodos = (storedTodo && (storedTodo !== null)) ? {\n  //   selectedTodo: JSON.parse(storedTodo),\n  // } : initialState;\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // useEffect(() => {\n  //   if (state.selectedTodo) {\n  //     localStorage.setItem('selectedTodo', JSON.stringify(state.selectedTodo));\n  //   }\n  // }, [state.selectedTodo]);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        {children}\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { DispatchContext, StateContext } from '../Store';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n}) => {\n  const { selectedTodo } = useContext(StateContext);\n  const dispatch = useContext(DispatchContext);\n\n  const selectNewTodo = (newTodo: Todo) => {\n    dispatch({ type: 'selectNew', todo: newTodo });\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({\n        'has-background-info-light': todo.id === selectedTodo?.id,\n      })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn({\n            'has-text-danger': !todo.completed,\n          }, {\n            'has-text-success': todo.completed,\n          })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n      <td className=\"has-text-right is-vcentered\">\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            selectNewTodo(todo);\n          }}\n        >\n          <span className=\"icon\">\n            <i className={cn('far', {\n              'fa-eye-slash': todo.id === selectedTodo?.id,\n              'fa-eye': todo.id !== selectedTodo?.id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\" aria-label=\"Check icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th aria-label=\"Empty Cell\"> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem key={todo.id} todo={todo} />\n      ))}\n    </tbody>\n  </table>\n);\n","export enum TodosType {\n  all = 'All',\n  active = 'Active',\n  completed = 'Completed',\n}\n","import React, { useRef, useState } from 'react';\nimport debounce from 'lodash.debounce';\nimport { TodosType } from '../../types/TodosType';\n\ninterface Props {\n  setType: React.Dispatch<React.SetStateAction<TodosType>>;\n  setAppliedQuery: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  setType,\n  setAppliedQuery,\n}) => {\n  const [query, setQuery] = useState('');\n  const applyQuery = useRef(debounce((value: string) => {\n    return setAppliedQuery(value);\n  }, 500)).current;\n\n  const handleStatusSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setType(e.target.value as TodosType);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    applyQuery(e.target.value);\n  };\n\n  const handleInputClear = () => {\n    setQuery('');\n    setAppliedQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleStatusSelect}\n          >\n            <option value={TodosType.all}>All</option>\n            <option value={TodosType.active}>Active</option>\n            <option value={TodosType.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          value={query}\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleInputClear}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(500)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getAllTodos = () => {\n  return get<Todo[]>('/todos').then(todos => todos);\n};\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { DispatchContext, StateContext } from '../Store';\nimport { getUser } from '../../api';\n\nexport const TodoModal: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const { selectedTodo } = useContext(StateContext);\n  const [user, setUser] = useState<User>();\n  const dispatch = useContext(DispatchContext);\n\n  const handleSelectedDelete = () => {\n    dispatch({ type: 'cancelSelection' });\n  };\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setUser)\n        .finally(() => setLoading(false));\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleSelectedDelete}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getAllTodos } from './api';\nimport { StateContext } from './components/Store';\nimport { TodosType } from './types/TodosType';\n\nexport const App: React.FC = () => {\n  const [allTodos, setAllTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [todosType, setTodosType] = useState(TodosType.all);\n  const { selectedTodo } = useContext(StateContext);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    if (todosType === TodosType.all) {\n      getAllTodos()\n        .then(setVisibleTodos)\n        .finally(() => setLoading(false));\n    } else if (todosType === TodosType.active) {\n      setVisibleTodos(allTodos.filter(todo => !todo.completed));\n    } else {\n      setVisibleTodos(allTodos.filter(todo => todo.completed));\n    }\n  }, [todosType, allTodos]);\n\n  useEffect(() => {\n    getAllTodos()\n      .then(setAllTodos)\n      .finally(() => setLoading(false));\n  }, [allTodos]);\n\n  const filteredPosts: Todo[] = useMemo(() => {\n    return visibleTodos.filter(todo => todo.title.includes(query));\n  }, [query, visibleTodos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setType={setTodosType}\n                setAppliedQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (<Loader />)}\n              {!loading && (<TodoList todos={filteredPosts} />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (<TodoModal />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { GlobalStateProvider } from './components/Store';\n\nReactDOM.render(\n  <GlobalStateProvider>\n    <App />\n  </GlobalStateProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}