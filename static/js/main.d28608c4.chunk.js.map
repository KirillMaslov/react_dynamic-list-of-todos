{"version":3,"sources":["components/Store/Store.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","types/TodosType.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["reducer","state","action","type","selectedTodo","todo","initialState","StateContext","React","createContext","DispatchContext","GlobalStateProvider","_ref","children","storedTodo","localStorage","getItem","initialTodos","JSON","parse","error","dispatch","useReducer","useEffect","setItem","stringify","_jsx","Provider","value","TodoItem","useContext","_jsxs","className","cn","id","completed","title","onClick","TodoList","todos","map","TodosType","TodoFilter","setType","setAppliedQuery","query","setQuery","useState","applyQuery","useRef","debounce","current","onChange","e","target","All","Active","Completed","placeholder","style","pointerEvents","handleInputClear","Loader","get","url","fullURL","delay","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","loading","setLoading","user","setUser","userId","concat","finally","handleSelectedDelete","href","email","name","App","setTodos","todosType","setTodosType","visibleTodos","useMemo","filter","filteredTodos","includes","_Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d28608c4.chunk.js","sourcesContent":["import React, { useEffect, useReducer } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface State {\n  selectedTodo: Todo | null,\n}\n\ntype Action = {\n  type: 'selectNew', todo: Todo,\n} | {\n  type: 'cancelSelection',\n};\n\nfunction reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'selectNew':\n      return { selectedTodo: action.todo };\n\n    case 'cancelSelection':\n      return { selectedTodo: null };\n\n    default: return state;\n  }\n}\n\nconst initialState: State = {\n  selectedTodo: null,\n};\n\nexport const StateContext = React.createContext(initialState);\nexport const DispatchContext = React.createContext<React.Dispatch<Action>>(\n  () => { },\n);\n\ninterface Props {\n  children: React.ReactNode,\n}\n\nexport const GlobalStateProvider: React.FC<Props> = ({ children }) => {\n  const storedTodo = localStorage.getItem('selectedTodo');\n\n  let initialTodos: State;\n\n  try {\n    initialTodos = storedTodo\n      ? { selectedTodo: JSON.parse(storedTodo) } : initialState;\n  } catch (error) {\n    initialTodos = initialState;\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialTodos);\n\n  useEffect(() => {\n    localStorage.setItem('selectedTodo', JSON.stringify(state.selectedTodo));\n  }, [state.selectedTodo]);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        {children}\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { DispatchContext, StateContext } from '../Store';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n}) => {\n  const { selectedTodo } = useContext(StateContext);\n  const dispatch = useContext(DispatchContext);\n\n  const selectNewTodo = (newTodo: Todo) => {\n    dispatch({ type: 'selectNew', todo: newTodo });\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({\n        'has-background-info-light': todo.id === selectedTodo?.id,\n      })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn({\n            'has-text-danger': !todo.completed,\n          }, {\n            'has-text-success': todo.completed,\n          })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n      <td className=\"has-text-right is-vcentered\">\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            selectNewTodo(todo);\n          }}\n        >\n          <span className=\"icon\">\n            <i className={cn('far', {\n              'fa-eye-slash': todo.id === selectedTodo?.id,\n              'fa-eye': todo.id !== selectedTodo?.id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\" aria-label=\"Check icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th aria-label=\"Empty Cell\"> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem key={todo.id} todo={todo} />\n      ))}\n    </tbody>\n  </table>\n);\n","export enum TodosType {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n","import React, { useRef, useState } from 'react';\nimport debounce from 'lodash.debounce';\nimport { TodosType } from '../../types/TodosType';\n\ninterface Props {\n  setType: React.Dispatch<React.SetStateAction<TodosType>>;\n  setAppliedQuery: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  setType,\n  setAppliedQuery,\n}) => {\n  const [query, setQuery] = useState('');\n  const applyQuery = useRef(debounce((value: string) => {\n    return setAppliedQuery(value);\n  }, 500)).current;\n\n  const handleStatusSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setType(e.target.value as TodosType);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    applyQuery(e.target.value);\n  };\n\n  const handleInputClear = () => {\n    setQuery('');\n    setAppliedQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleStatusSelect}\n          >\n            <option value={TodosType.All}>All</option>\n            <option value={TodosType.Active}>Active</option>\n            <option value={TodosType.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          value={query}\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleInputClear}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(500)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getAllTodos = () => {\n  return get<Todo[]>('/todos').then(todos => todos);\n};\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { DispatchContext, StateContext } from '../Store';\nimport { getUser } from '../../api';\n\nexport const TodoModal: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const { selectedTodo } = useContext(StateContext);\n  const [user, setUser] = useState<User>();\n  const dispatch = useContext(DispatchContext);\n\n  const handleSelectedDelete = () => {\n    dispatch({ type: 'cancelSelection' });\n  };\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setUser)\n        .finally(() => setLoading(false));\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleSelectedDelete}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getAllTodos } from './api';\nimport { StateContext } from './components/Store';\nimport { TodosType } from './types/TodosType';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [todosType, setTodosType] = useState(TodosType.All);\n  const { selectedTodo } = useContext(StateContext);\n  const [query, setQuery] = useState('');\n  const visibleTodos = useMemo(() => {\n    switch (todosType) {\n      case TodosType.Active:\n        return todos.filter(todo => !todo.completed);\n      case TodosType.Completed:\n        return todos.filter(todo => todo.completed);\n      default:\n        return todos;\n    }\n  }, [todos, todosType]);\n\n  useEffect(() => {\n    getAllTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, [todos]);\n\n  const filteredTodos: Todo[] = useMemo(() => {\n    return visibleTodos.filter(todo => todo.title.includes(query));\n  }, [query, visibleTodos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setType={setTodosType}\n                setAppliedQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (<Loader />)}\n              {!loading && (<TodoList todos={filteredTodos} />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (<TodoModal />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { GlobalStateProvider } from './components/Store';\n\nReactDOM.render(\n  <GlobalStateProvider>\n    <App />\n  </GlobalStateProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}